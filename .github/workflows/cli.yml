name: GoFrame CLI Build Release

on:
  pull_request:
    branches:
      - master
    types:
      - closed

env:
  TZ: Asia/Shanghai


jobs:
  build:
    name: Build And Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.head_ref, 'cli/') && github.event.pull_request.merged == true }}
    steps:
      - name: Checkout Github Code
        uses: actions/checkout@v3
      
      - name: Set Up Golang Environment
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.3

      - name: Set TAG ENV
        run: |
          echo "RELEASE_TAG=${GITHUB_HEAD_REF#*/}" >> "$GITHUB_ENV"
          echo "${{ env.RELEASE_TAG }}"

      - name: Build CLI Binary
        run: |
          echo "Building linux amd64 binary..."
          cd cmd/gf
          GOOS=linux GOARCH=amd64 go build main.go
          chmod +x main
          ./main install -y

      - name: Build CLI Binary For All Platform
        run: |
          cd cmd/gf
          gf build main.go -n gf -a all -s all

      - name: Move Files Before Release
        run: |
          cd cmd/gf/temp
          for OS in *;do for FILE in $OS/*;\
          do if [[ ${OS} =~ 'windows' ]];\
          then mv $FILE gf_$OS.exe && rm -rf $OS;\
          else mv $FILE gf_$OS && rm -rf $OS;\
          fi;done;done

      - name: Create Github Release
        uses: termux/upload-release-action@v4.0.2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_TAG }}
          release_name: GoFrame Release ${{ env.RELEASE_TAG }}
          file: cmd/gf/temp/gf_*
          file_glob: true

